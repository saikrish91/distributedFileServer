# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pipe.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='pipe.proto',
  package='',
  serialized_pb=_b('\n\npipe.proto\x1a\x0c\x63ommon.proto\"^\n\x0cGlobalHeader\x12\x12\n\ncluster_id\x18\x01 \x02(\x05\x12\x0c\n\x04time\x18\x02 \x02(\x03\x12\x16\n\x0e\x64\x65stination_id\x18\x08 \x01(\x05\x12\x14\n\x08max_hops\x18\n \x01(\x05:\x02-1\"\xdf\x01\n\x0e\x43ommandMessage\x12#\n\x0cglobalHeader\x18\x01 \x02(\x0b\x32\r.GlobalHeader\x12\x0e\n\x04ping\x18\x02 \x01(\x08H\x00\x12\x11\n\x07message\x18\x03 \x01(\tH\x00\x12\x1b\n\x07\x66\x61ilure\x18\x04 \x01(\x0b\x32\x08.FailureH\x00\x12\x1b\n\x07request\x18\x05 \x01(\x0b\x32\x08.RequestH\x00\x12\x1d\n\x08response\x18\x06 \x01(\x0b\x32\t.ResponseH\x00\x12!\n\ndnsrequest\x18\x07 \x01(\x0b\x32\x0b.DNSRequestH\x00\x42\t\n\x07payload\"(\n\nDNSRequest\x12\x0c\n\x04host\x18\x01 \x02(\x05\x12\x0c\n\x04port\x18\x02 \x02(\x05\"K\n\x04\x46ile\x12\x0f\n\x07\x63hunkId\x18\x01 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x10\n\x08\x66ilename\x18\x03 \x02(\t\x12\x12\n\nchunkCount\x18\x05 \x01(\x05\"u\n\x07Request\x12\x11\n\trequestId\x18\x04 \x02(\t\x12!\n\x0brequestType\x18\x01 \x02(\x0e\x32\x0c.RequestType\x12\x12\n\x08\x66ileName\x18\x02 \x01(\tH\x00\x12\x15\n\x04\x66ile\x18\x03 \x01(\x0b\x32\x05.FileH\x00\x42\t\n\x07payload\"\x90\x01\n\x08Response\x12\x11\n\trequestId\x18\x05 \x02(\t\x12!\n\x0brequestType\x18\x01 \x02(\x0e\x32\x0c.RequestType\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x1b\n\x07\x66\x61ilure\x18\x03 \x01(\x0b\x32\x08.FailureH\x00\x12\x15\n\x04\x66ile\x18\x04 \x01(\x0b\x32\x05.FileH\x00\x42\t\n\x07payload*:\n\x0bRequestType\x12\x08\n\x04READ\x10\x01\x12\t\n\x05WRITE\x10\x02\x12\n\n\x06UPDATE\x10\x03\x12\n\n\x06\x44\x45LETE\x10\x04\x42\x0b\n\x07routingH\x01')
  ,
  dependencies=[common_pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_REQUESTTYPE = _descriptor.EnumDescriptor(
  name='RequestType',
  full_name='RequestType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='READ', index=0, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WRITE', index=1, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE', index=2, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETE', index=3, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=735,
  serialized_end=793,
)
_sym_db.RegisterEnumDescriptor(_REQUESTTYPE)

RequestType = enum_type_wrapper.EnumTypeWrapper(_REQUESTTYPE)
READ = 1
WRITE = 2
UPDATE = 3
DELETE = 4



_GLOBALHEADER = _descriptor.Descriptor(
  name='GlobalHeader',
  full_name='GlobalHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cluster_id', full_name='GlobalHeader.cluster_id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time', full_name='GlobalHeader.time', index=1,
      number=2, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='destination_id', full_name='GlobalHeader.destination_id', index=2,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='max_hops', full_name='GlobalHeader.max_hops', index=3,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=True, default_value=-1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=122,
)


_COMMANDMESSAGE = _descriptor.Descriptor(
  name='CommandMessage',
  full_name='CommandMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='globalHeader', full_name='CommandMessage.globalHeader', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ping', full_name='CommandMessage.ping', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='CommandMessage.message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='failure', full_name='CommandMessage.failure', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='request', full_name='CommandMessage.request', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='CommandMessage.response', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dnsrequest', full_name='CommandMessage.dnsrequest', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='CommandMessage.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=125,
  serialized_end=348,
)


_DNSREQUEST = _descriptor.Descriptor(
  name='DNSRequest',
  full_name='DNSRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='DNSRequest.host', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='DNSRequest.port', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=350,
  serialized_end=390,
)


_FILE = _descriptor.Descriptor(
  name='File',
  full_name='File',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chunkId', full_name='File.chunkId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='File.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filename', full_name='File.filename', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chunkCount', full_name='File.chunkCount', index=3,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=392,
  serialized_end=467,
)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requestId', full_name='Request.requestId', index=0,
      number=4, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requestType', full_name='Request.requestType', index=1,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fileName', full_name='Request.fileName', index=2,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file', full_name='Request.file', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='Request.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=469,
  serialized_end=586,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requestId', full_name='Response.requestId', index=0,
      number=5, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requestType', full_name='Response.requestType', index=1,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='success', full_name='Response.success', index=2,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='failure', full_name='Response.failure', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file', full_name='Response.file', index=4,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='Response.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=589,
  serialized_end=733,
)

_COMMANDMESSAGE.fields_by_name['globalHeader'].message_type = _GLOBALHEADER
_COMMANDMESSAGE.fields_by_name['failure'].message_type = common_pb2._FAILURE
_COMMANDMESSAGE.fields_by_name['request'].message_type = _REQUEST
_COMMANDMESSAGE.fields_by_name['response'].message_type = _RESPONSE
_COMMANDMESSAGE.fields_by_name['dnsrequest'].message_type = _DNSREQUEST
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['ping'])
_COMMANDMESSAGE.fields_by_name['ping'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['message'])
_COMMANDMESSAGE.fields_by_name['message'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['failure'])
_COMMANDMESSAGE.fields_by_name['failure'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['request'])
_COMMANDMESSAGE.fields_by_name['request'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['response'])
_COMMANDMESSAGE.fields_by_name['response'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_COMMANDMESSAGE.oneofs_by_name['payload'].fields.append(
  _COMMANDMESSAGE.fields_by_name['dnsrequest'])
_COMMANDMESSAGE.fields_by_name['dnsrequest'].containing_oneof = _COMMANDMESSAGE.oneofs_by_name['payload']
_REQUEST.fields_by_name['requestType'].enum_type = _REQUESTTYPE
_REQUEST.fields_by_name['file'].message_type = _FILE
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['fileName'])
_REQUEST.fields_by_name['fileName'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_REQUEST.oneofs_by_name['payload'].fields.append(
  _REQUEST.fields_by_name['file'])
_REQUEST.fields_by_name['file'].containing_oneof = _REQUEST.oneofs_by_name['payload']
_RESPONSE.fields_by_name['requestType'].enum_type = _REQUESTTYPE
_RESPONSE.fields_by_name['failure'].message_type = common_pb2._FAILURE
_RESPONSE.fields_by_name['file'].message_type = _FILE
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['failure'])
_RESPONSE.fields_by_name['failure'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
_RESPONSE.oneofs_by_name['payload'].fields.append(
  _RESPONSE.fields_by_name['file'])
_RESPONSE.fields_by_name['file'].containing_oneof = _RESPONSE.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['GlobalHeader'] = _GLOBALHEADER
DESCRIPTOR.message_types_by_name['CommandMessage'] = _COMMANDMESSAGE
DESCRIPTOR.message_types_by_name['DNSRequest'] = _DNSREQUEST
DESCRIPTOR.message_types_by_name['File'] = _FILE
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.enum_types_by_name['RequestType'] = _REQUESTTYPE

GlobalHeader = _reflection.GeneratedProtocolMessageType('GlobalHeader', (_message.Message,), dict(
  DESCRIPTOR = _GLOBALHEADER,
  __module__ = 'pipe_pb2'
  # @@protoc_insertion_point(class_scope:GlobalHeader)
  ))
_sym_db.RegisterMessage(GlobalHeader)

CommandMessage = _reflection.GeneratedProtocolMessageType('CommandMessage', (_message.Message,), dict(
  DESCRIPTOR = _COMMANDMESSAGE,
  __module__ = 'pipe_pb2'
  # @@protoc_insertion_point(class_scope:CommandMessage)
  ))
_sym_db.RegisterMessage(CommandMessage)

DNSRequest = _reflection.GeneratedProtocolMessageType('DNSRequest', (_message.Message,), dict(
  DESCRIPTOR = _DNSREQUEST,
  __module__ = 'pipe_pb2'
  # @@protoc_insertion_point(class_scope:DNSRequest)
  ))
_sym_db.RegisterMessage(DNSRequest)

File = _reflection.GeneratedProtocolMessageType('File', (_message.Message,), dict(
  DESCRIPTOR = _FILE,
  __module__ = 'pipe_pb2'
  # @@protoc_insertion_point(class_scope:File)
  ))
_sym_db.RegisterMessage(File)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'pipe_pb2'
  # @@protoc_insertion_point(class_scope:Request)
  ))
_sym_db.RegisterMessage(Request)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'pipe_pb2'
  # @@protoc_insertion_point(class_scope:Response)
  ))
_sym_db.RegisterMessage(Response)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\007routingH\001'))
# @@protoc_insertion_point(module_scope)
